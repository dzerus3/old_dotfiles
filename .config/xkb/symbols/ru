// Rulemak, Colemak based Russian phonetic layout
// contact: Geert Hendrickx <geert@hendrickx.be>
// http://forum.colemak.com/viewtopic.php?id=519
//
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━┓
// │ Ё ``│ ! ˝ │ @   │ №   │ $   │ %   │ ^ ¯ │ &   │ * ₴ │ (   │ )   │ _ — │ Ъ + ┃ ⌫       ┃
// │ ё ` │ 1 ´ │ 2 ¨ │ 3 # │ 4 ¢ │ 5 € │ 6 ˘ │ 7   │ 8 ₽ │ 9 [ │ 0 ] │ - – │ ъ = ┃Backspace┃
// ┢━━━━━┷━┱───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┺━┳━━━━━━━┫
// ┃       ┃ Я Ѣ │ Ж Ѵ │ Ф Ѳ │ П   │ Г Ґ │ й Ј │ Л Љ │ У Ў │ Ы Ї │ Ю : │ Ш { │ Щ } ┃ Enter ┃
// ┃ Tab ↹ ┃ я ѣ │ ж ѵ │ ф ѳ │ п   │ г ґ │ й ј │ л љ │ у ў │ ы ї │ ю ; │ ш « │ щ » ┃   ⏎   ┃
// ┣━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓      ┃
// ┃ ⌫ Back ┃ А   │ Р   │ С   │ Т Ћ │ Д Ђ │ Ч Џ │ Н Њ │ Е Є │ И І │ О   │ Ь " │ Э | ┃      ┃
// ┃  space ┃ а   │ р   │ с   │ т ћ │ д ђ │ ч џ │ н њ │ е є │ и і │ о   │ ь ' │ э \ ┃      ┃
// ┣━━━━━━━━┻━┱───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┲━━━┷━━━━━┻━━━━━━┫
// ┃          ┃ З Ѕ │ Х   │ Ц   │ В   │ Б Ѓ │ К Ќ │ М   │ ;   │ :   │ ? Ӏ ┃                ┃
// ┃  Shift ⇧ ┃ з ѕ │ х   │ ц   │ в   │ б ѓ │ к ќ │ м   │ , < │ . > │ / ӏ ┃     Shift ⇧    ┃
// ┣━━━━━━━┳━━┻━━━━┳┷━━━━━┷┱────┴─────┴─────┴─────┴─────┴─────┴┲━━━━┷━━┳━━┻━━━━┳━━━━━━━┳━━━┛
// ┃       ┃       ┃       ┃                                   ┃       ┃       ┃       ┃
// ┃ Ctrl  ┃ Meta  ┃  Alt  ┃                Space              ┃AltGr ⇮┃ Menu  ┃ Ctrl  ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹───────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┛

partial alphanumeric_keys
xkb_symbols "rulemak_dh" {

    name[Group1]= "Russian (Rulemak, phonetic Colemak)";

    key <TLDE> { [     Cyrillic_io,     Cyrillic_IO,           U0300,           U030F ] }; // Combining grave, double grave
    key <AE01> { [               1,          exclam,           U0301,           U030B ] }; // Combining acute, double acute
    key <AE02> { [               2,              at,           U0308                  ] }; // Combining diaeresis
    key <AE03> { [               3,      numerosign,      numbersign                  ] };
    key <AE04> { [               4,          dollar,            cent                  ] };
    key <AE05> { [               5,         percent,        EuroSign                  ] };
    key <AE06> { [               6,     asciicircum,           U0306,           U0304 ] }; // Combining breve, macron
    key <AE07> { [               7,       ampersand                                   ] };
    key <AE08> { [               8,        asterisk,           U20BD,           U20B4 ] }; // ruble, hryvnia
    key <AE09> { [               9,       parenleft,     bracketleft                  ] };
    key <AE10> { [               0,      parenright,    bracketright                  ] };
    key <AE11> { [           minus,      underscore,          endash,          emdash ] };
    key <AE12> { [ Cyrillic_hardsign, Cyrillic_HARDSIGN,       equal,            plus ] };

    key <AD01> { [     Cyrillic_ya,     Cyrillic_YA,           U0463,           U0462 ] }; // yat
    key <AD02> { [    Cyrillic_zhe,    Cyrillic_ZHE,           U0475,           U0474 ] }; // izhitsa
    key <AD03> { [     Cyrillic_ef,     Cyrillic_EF,           U0473,           U0472 ] }; // fita
    key <AD04> { [     Cyrillic_pe,     Cyrillic_PE                                   ] };
    key <AD05> { [     Cyrillic_be,    Cyrillic_BE,  Ukrainian_ghe_with_upturn, Ukrainian_GHE_WITH_UPTURN ] };
    key <AD06> { [ Cyrillic_shorti, Cyrillic_SHORTI,     Cyrillic_je,     Cyrillic_JE ] };
    key <AD07> { [     Cyrillic_el,     Cyrillic_EL,    Cyrillic_lje,    Cyrillic_LJE ] };
    key <AD08> { [      Cyrillic_u,      Cyrillic_U, Byelorussian_shortu, Byelorussian_SHORTU ] };
    key <AD09> { [   Cyrillic_yeru,   Cyrillic_YERU,    Ukrainian_yi,    Ukrainian_YI ] };
    key <AD10> { [     Cyrillic_yu,     Cyrillic_YU,       semicolon,           colon ] };
    key <AD11> { [    Cyrillic_sha,    Cyrillic_SHA,   guillemotleft,       braceleft ] };
    key <AD12> { [  Cyrillic_shcha,  Cyrillic_SHCHA,  guillemotright,      braceright ] };
    key <BKSL> { [      Cyrillic_e,      Cyrillic_E,       backslash,             bar ] };

    key <AC01> { [      Cyrillic_a,      Cyrillic_A                                   ] };
    key <AC02> { [     Cyrillic_er,     Cyrillic_ER                                   ] };
    key <AC03> { [     Cyrillic_es,     Cyrillic_ES                                   ] };
    key <AC04> { [     Cyrillic_te,     Cyrillic_TE,    Serbian_tshe,    Serbian_TSHE ] };
    key <AC05> { [     Cyrillic_ge,     Cyrillic_GE,     Serbian_dje,     Serbian_DJE ] };
    key <AC06> { [     Cyrillic_em,     Cyrillic_EM,   Cyrillic_dzhe,   Cyrillic_DZHE ] };
    key <AC07> { [     Cyrillic_en,     Cyrillic_EN,    Cyrillic_nje,    Cyrillic_NJE ] };
    key <AC08> { [     Cyrillic_ie,     Cyrillic_IE,    Ukrainian_ie,    Ukrainian_IE ] };
    key <AC09> { [      Cyrillic_i,      Cyrillic_I,     Ukrainian_i,     Ukrainian_I ] };
    key <AC10> { [      Cyrillic_o,      Cyrillic_O                                   ] };
    key <AC11> { [ Cyrillic_softsign, Cyrillic_SOFTSIGN,  apostrophe,        quotedbl ] };

    key <AB01> { [     Cyrillic_ze,     Cyrillic_ZE,   Macedonia_dse,   Macedonia_DSE ] };
    key <AB02> { [     Cyrillic_ha,     Cyrillic_HA                                   ] };
    key <AB03> { [    Cyrillic_tse,    Cyrillic_TSE                                   ] };
    key <AB04> { [     Cyrillic_de,     Cyrillic_DE                                   ] };
    key <AB05> { [     Cyrillic_ve,     Cyrillic_VE,   Macedonia_gje,   Macedonia_GJE ] };
    key <AB06> { [     Cyrillic_ka,     Cyrillic_KA,   Macedonia_kje,   Macedonia_KJE ] };
    key <AB07> { [     Cyrillic_che,    Cyrillic_CHE                                  ] };
    key <AB08> { [           comma,       semicolon,            less                  ] };
    key <AB09> { [          period,           colon,         greater                  ] };
    key <AB10> { [           slash,        question,           U04CF,           U04C0 ] }; // palochka

    key <LSGT> { [           equal,            plus,        multiply,        division ] };

    include "level3(ralt_switch)"
    include "capslock(backspace)"
    include "nbsp(level4)"
};

